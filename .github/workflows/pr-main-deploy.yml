# Unique name for this workflow
name: Deploy develop to production

# Definition when the workflow should run
on:
  pull_request:
    types:
      - closed
    branches: [develop]
    paths:
      - 'force-app/**'

# Jobs to be executed
jobs:
  deploy-branch-to-production-org:
    if: github.event.pull_request.merged == true && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: 'Install Salesforce CLI'
        run: |
          npm install @salesforce/cli --global

      - name: 'Installing sfdx git delta'
        run: |
          echo y | sf plugins install sfdx-git-delta
          sf plugins

      - name: 'Checkout source code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Store secret for production org
      - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
        shell: bash
        run: |
          echo ${{ secrets.SFDX_PRODUCTION_URL}} > ./SFDX_PRODUCTION_URL.txt

      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          mkdir changed-sources
          sf sgd source delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      # Authenticate to org
      - name: 'Authenticate to Production Org'
        run: sf org login sfdx-url --file ./SFDX_PRODUCTION_URL.txt --set-default --alias production

      - name: 'Deploy the entire branch to Production org'
        run: sf deploy metadata --source-dir force-app --target-org production --test-level RunLocalTests --json

      - name: 'Deploy destructive changes (if any) to Production org'
        run: sf deploy metadata --metadata-dir "changed-sources/destructiveChanges" --target-org production --check-only --ignore-warnings
